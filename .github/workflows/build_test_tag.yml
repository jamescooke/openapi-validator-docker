name: Build, test, tag

on:
  pull_request:
  push:

jobs:
  build_test:
    # Build image and test with trivy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build . --file Dockerfile --tag image
    - name: Run image
      run: docker run image
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.5.1
      with:
        image-ref: 'image'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'LOW,MEDIUM,HIGH,CRITICAL'

  check_new_version:
    needs: build_test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.extract_tag.outputs.version }}
      existing_version: ${{ steps.check_tag.outputs.existing_tag }}
    steps:
    - uses: actions/checkout@v2

    - name: Fetch all git history
      run: git fetch --prune --unshallow --tags

    - name: Extract tag
      id: extract_tag
      run: ./extract_tag.sh
    - name: Debug found tag
      run: echo "version='${{ steps.extract_tag.outputs.version }}'"

    - name: Check tag
      id: check_tag
      run: ./check_tag.sh ${{ steps.extract_tag.outputs.version }}
    - name: Debug check tag
      run: echo "existing_tag='${{ steps.check_tag.outputs.existing_tag }}'"

  push_image:
    # When a new version is found push a new latest and tagged image to docker
    # hub
    needs: check_new_version
    if: needs.check_new_version.outputs.existing_version == ''
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Debug new version
      run: echo "new_version='${{ needs.check_new_version.outputs.new_version }}'"

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: build_and_push
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: jamescooke/openapi-validator:latest,jamescooke/openapi-validator:${{ needs.check_new_version.outputs.new_version }}

    - name: Image digest
      run: echo ${{ steps.build_and_push.outputs.digest }}

  push_tag:
    # When a new version is found push a new tag to GitHub
    needs: check_new_version
    if: needs.check_new_version.outputs.existing_version == ''
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Debug new version
      run: echo "new_version='${{ needs.check_new_version.outputs.new_version }}'"

    - name: Create tag
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git tag -a "${{ needs.check_new_version.outputs.new_version }}" -m ""

    - name: Push tag
      env:
        REMOTE_REPO: "https://${{ github.actor }}:${{ github.token }}@github.com/${{ github.repository }}.git"
      run: git push "$REMOTE_REPO" --tags
